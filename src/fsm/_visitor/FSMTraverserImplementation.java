/* generated from model FSM */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package fsm._visitor;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;

/* generated by template core.Annotations*/
// empty template: no Annotation

 public  class FSMTraverserImplementation  implements fsm._visitor.FSMTraverser {

    /* generated by template core.Attribute*/
 protected  FSMTraverserImplementation realThis = (FSMTraverserImplementation) this;

    /* generated by template core.Attribute*/
 protected  List<de.monticore.visitor.IVisitor> iVisitorList = new ArrayList<>();

    /* generated by template core.Attribute*/
 protected  List<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2> mCCommonLiteralsVisitorList = new ArrayList<>();;

    /* generated by template core.Attribute*/
 protected  List<de.monticore.mcbasics._visitor.MCBasicsVisitor2> mCBasicsVisitorList = new ArrayList<>();;

    /* generated by template core.Attribute*/
 protected  List<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2> mCLiteralsBasisVisitorList = new ArrayList<>();;

    /* generated by template core.Attribute*/
 protected  List<fsm._visitor.FSMVisitor2> fSMVisitorList = new ArrayList<>();;

    /* generated by template core.Attribute*/
 protected  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler> mCCommonLiteralsHandler = Optional.empty();

    /* generated by template core.Attribute*/
 protected  Optional<de.monticore.mcbasics._visitor.MCBasicsHandler> mCBasicsHandler = Optional.empty();

    /* generated by template core.Attribute*/
 protected  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler> mCLiteralsBasisHandler = Optional.empty();

    /* generated by template core.Attribute*/
 protected  Optional<fsm._visitor.FSMHandler> fSMHandler = Optional.empty();



    /* generated by template core.Method*/
 public  void add4MCCommonLiterals (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2 mCCommonLiteralsVisitor)

 {
      /* generated by template _visitor.traverser.AddVisitor*/

  this.mCCommonLiteralsVisitorList.add(mCCommonLiteralsVisitor);
}

    /* generated by template core.Method*/
 public  List<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2> getMCCommonLiteralsVisitorList ()

 {
      return mCCommonLiteralsVisitorList;
}

    /* generated by template core.Method*/
 public  void add4MCBasics (de.monticore.mcbasics._visitor.MCBasicsVisitor2 mCBasicsVisitor)

 {
      /* generated by template _visitor.traverser.AddVisitor*/

  this.mCBasicsVisitorList.add(mCBasicsVisitor);
}

    /* generated by template core.Method*/
 public  List<de.monticore.mcbasics._visitor.MCBasicsVisitor2> getMCBasicsVisitorList ()

 {
      return mCBasicsVisitorList;
}

    /* generated by template core.Method*/
 public  void add4MCLiteralsBasis (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2 mCLiteralsBasisVisitor)

 {
      /* generated by template _visitor.traverser.AddVisitor*/

  this.mCLiteralsBasisVisitorList.add(mCLiteralsBasisVisitor);
}

    /* generated by template core.Method*/
 public  List<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2> getMCLiteralsBasisVisitorList ()

 {
      return mCLiteralsBasisVisitorList;
}

    /* generated by template core.Method*/
 public  void add4FSM (fsm._visitor.FSMVisitor2 fSMVisitor)

 {
      /* generated by template _visitor.traverser.AddVisitor*/

  this.fSMVisitorList.add(fSMVisitor);
}

    /* generated by template core.Method*/
 public  List<fsm._visitor.FSMVisitor2> getFSMVisitorList ()

 {
      return fSMVisitorList;
}

    /* generated by template core.Method*/
 public  void setMCCommonLiteralsHandler (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler mCCommonLiteralsHandler)

 {
      /* generated by template _visitor.traverser.SetHandler*/

  this.mCCommonLiteralsHandler = Optional.ofNullable(mCCommonLiteralsHandler);
  if (this.mCCommonLiteralsHandler.isPresent()) {
    this.mCCommonLiteralsHandler.get().setTraverser(this);
  }

}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler> getMCCommonLiteralsHandler ()

 {
      return mCCommonLiteralsHandler;
}

    /* generated by template core.Method*/
 public  void setMCBasicsHandler (de.monticore.mcbasics._visitor.MCBasicsHandler mCBasicsHandler)

 {
      /* generated by template _visitor.traverser.SetHandler*/

  this.mCBasicsHandler = Optional.ofNullable(mCBasicsHandler);
  if (this.mCBasicsHandler.isPresent()) {
    this.mCBasicsHandler.get().setTraverser(this);
  }

}

    /* generated by template core.Method*/
 public  Optional<de.monticore.mcbasics._visitor.MCBasicsHandler> getMCBasicsHandler ()

 {
      return mCBasicsHandler;
}

    /* generated by template core.Method*/
 public  void setMCLiteralsBasisHandler (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler mCLiteralsBasisHandler)

 {
      /* generated by template _visitor.traverser.SetHandler*/

  this.mCLiteralsBasisHandler = Optional.ofNullable(mCLiteralsBasisHandler);
  if (this.mCLiteralsBasisHandler.isPresent()) {
    this.mCLiteralsBasisHandler.get().setTraverser(this);
  }

}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler> getMCLiteralsBasisHandler ()

 {
      return mCLiteralsBasisHandler;
}

    /* generated by template core.Method*/
 public  void setFSMHandler (fsm._visitor.FSMHandler fSMHandler)

 {
      /* generated by template _visitor.traverser.SetHandler*/

  this.fSMHandler = Optional.ofNullable(fSMHandler);
  if (this.fSMHandler.isPresent()) {
    this.fSMHandler.get().setTraverser(this);
  }

}

    /* generated by template core.Method*/
 public  Optional<fsm._visitor.FSMHandler> getFSMHandler ()

 {
      return fSMHandler;
}

    /* generated by template core.Method*/
 public  void add4IVisitor (de.monticore.visitor.IVisitor iVisitor)

 {
      /* generated by template _visitor.traverser.AddVisitor*/

  this.iVisitorList.add(iVisitor);
}

    /* generated by template core.Method*/
 public  List<de.monticore.visitor.IVisitor> getIVisitorList ()

 {
      return iVisitorList;
}

}
